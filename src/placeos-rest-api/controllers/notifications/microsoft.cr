module PlaceOS::Api
  struct MicrosoftNotification
    include JSON::Serializable

    # @[JSON::Field(key: "@odata.type")]
    # getter type : String

    @[JSON::Field(key: "validationTokens")]
    # Contains an array of JWT tokens generated by Microsoft Graph for the application to validate the origin of the notifications.
    # Microsoft Graph generates a single token for each distinct app and tenant pair for an item if it exists in the value array.
    # Keep in mind that notifications can contain a mix of items for various apps and tenants that subscribed using the same notification URL.
    # Only provided for change notifications with resource data. Optional.
    getter tokens : Array(String)?

    @[JSON::Field(key: "value")]
    # The set of notifications being sent to the notification URL. Required.
    getter notifications : Array(ChangeNotification)

    struct ChangeNotification
      include JSON::Serializable

      enum ChangeType
        CREATED
        UPDATED
        DELETED

        def to_s(io : IO) : Nil
          io << (member_name || value.to_s).downcase
        end

        def to_s : String
          String.build { |io| to_s(io) }
        end
      end

      enum LifecycleEvent
        MISSED
        SUBSCRIPTION_REMOVED
        REAUTHORIZATION_REQUIRED
        # For LifecycleEventType values that were not expected from the service
        UNEXPECTED_VALUE

        def to_s(io : IO) : Nil
          val = (member_name || value.to_s).downcase.camelcase
          io << val[0].downcase << val[1..]
        end

        def to_s : String
          String.build { |io| to_s(io) }
        end

        def to_payload
          case self
          when .subscription_removed?     then "renew"
          when .reauthorization_required? then "reauthorize"
          else                                 self.to_s
          end
        end
      end

      @[JSON::Field(key: "changeType")]
      # Indicates the type of change that will raise the change notification. The supported values are: created, updated, deleted. Required.
      getter type : ChangeType?

      @[JSON::Field(key: "clientState")]
      # Value of the clientState property sent in the subscription request (if any). The maximum length is 255 characters.
      # The client can check whether the change notification came from the service by comparing the values of the clientState property.
      # The value of the clientState property sent with the subscription is compared with the value of the clientState property received with each change notification. Optional.
      getter client_state : String?

      @[JSON::Field(key: "encryptedContent")]
      # The Encrypted Content.
      # (Preview) Encrypted content attached with the change notification. Only provided if encryptionCertificate and includeResourceData were defined during the subscription request
      # and if the resource supports it. Optional.
      getter encrypted_content : EncryptedContent?

      @[JSON::Field(key: "id")]
      # Unique ID for the notification. Optional.
      getter id : String?

      @[JSON::Field(key: "lifecycleEvent")]
      # The Lifecycle Event.
      # The type of lifecycle notification if the current notification is a lifecycle notification. Optional.
      # Supported values are missed, subscriptionRemoved, reauthorizationRequired. Optional.
      getter event : LifecycleEvent?

      @[JSON::Field(key: "resource")]
      # The URI of the resource that emitted the change notification relative to https://graph.microsoft.com. Required.
      getter resource : String?

      @[JSON::Field(key: "resourceData")]
      # The content of this property depends on the type of resource being subscribed to. Optional.
      getter resource_data : ResourceData?

      @[JSON::Field(key: "subscriptionExpirationDateTime")]
      # The expiration time for the subscription. Required.
      getter subscription_expiry : Time

      @[JSON::Field(key: "subscriptionId")]
      # The unique identifier of the subscription that generated the notification.Required.
      getter subscription_id : String

      @[JSON::Field(key: "tenantId")]
      # The unique identifier of the tenant from which the change notification originated. Required.
      getter tenant_id : String

      def to_payload
        {
          "event_type":      (event.try &.to_payload) || type.to_s,
          "resource_id":     resource_data.try &.id,
          "resource_uri":    resource,
          "subscription_id": subscription_id,
          "client_secret":   client_state,
          "expiration_time": subscription_expiry.to_unix,
        }.to_json
      end
    end

    # Only present for Outlook resources
    struct ResourceData
      include JSON::Serializable

      # @[JSON::Field(key: "@odata.id")]
      # # The OData identifier of the object.
      # getter odata_id : String?

      # @[JSON::Field(key: "@odata.etag")]
      # # The HTTP entity tag that represents the version of the object.
      # getter etag : String?

      @[JSON::Field(key: "id")]
      # The identifier of the object
      getter id : String?
    end

    struct EncryptedContent
      include JSON::Serializable

      @[JSON::Field(key: "data")]
      # Base64-encoded encrypted data that produces a full resource respresented as JSON.
      # The data has been encrypted with the provided dataKey using an AES/CBC/PKCS5PADDING cipher suite.
      getter data : String?

      @[JSON::Field(key: "dataKey")]
      # Base64-encoded symmetric key generated by Microsoft Graph to encrypt the data value and to generate the data signature.
      # This key is encrypted with the certificate public key that was provided during the subscription.
      # It must be decrypted with the certificate private key before it can be used to decrypt the data or verify the signature.
      # This key has been encrypted with the following cipher suite: RSA/ECB/OAEPWithSHA1AndMGF1Padding.
      getter data_key : String?

      @[JSON::Field(key: "dataSignature")]
      # Base64-encoded HMAC-SHA256 hash of the data for validation purposes.
      getter data_signature : String?

      @[JSON::Field(key: "encryptionCertificateId")]
      # ID of the certificate used to encrypt the dataKey.
      getter certificate_id : String?

      @[JSON::Field(key: "encryptionCertificateThumbprint")]
      # Hexadecimal representation of the thumbprint of the certificate used to encrypt the dataKey.
      getter certificate_thumbprint : String?
    end
  end
end
